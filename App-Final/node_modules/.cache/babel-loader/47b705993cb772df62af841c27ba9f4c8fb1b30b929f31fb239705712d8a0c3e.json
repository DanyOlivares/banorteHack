{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danyO\\\\Downloads\\\\nombre-de-tu-aplicacion\\\\nombre-de-tu-aplicacion\\\\src\\\\API.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './API.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction API() {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [showMessage, setshowMessage] = useState(false);\n  const [mensaje, setMensaje] = useState(\"\");\n  const handleSubmit = e => {\n    e.preventDefault();\n    setshowMessage(true);\n    const apiKey = 'AIzaSyD5XwIYEFhSD7qFGXJ93kJHrLYxSNmNKOQ'; // Replace with your actual API key\n    const apiUrl = 'https://generativelanguage.googleapis.com/v1beta2/models/text-bison-001:generateText';\n    const data = {\n      prompt: {\n        text: message\n      }\n    };\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(`${apiUrl}?key=${apiKey}`, requestOptions).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      // Handle the response data here\n      setMensaje(data[\"candidates\"][0][\"output\"]);\n      let var1 = \"hola\";\n      let varTraducida = \"hello\";\n    }).catch(error => {\n      // Handle errors here\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-main\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Boton\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), showMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true);\n}\n_s(API, \"3YtcfmINmJKyp4Z9zmyOYFR4CAU=\");\n_c = API;\nexport default API;\nvar _c;\n$RefreshReg$(_c, \"API\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","API","_s","message","setMessage","showMessage","setshowMessage","mensaje","setMensaje","handleSubmit","e","preventDefault","apiKey","apiUrl","data","prompt","text","requestOptions","method","headers","body","JSON","stringify","fetch","then","response","ok","Error","json","var1","varTraducida","catch","error","console","children","className","onSubmit","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/danyO/Downloads/nombre-de-tu-aplicacion/nombre-de-tu-aplicacion/src/API.js"],"sourcesContent":["import { useState } from 'react'\r\nimport './API.css'\r\n\r\nfunction API() {\r\n  const [message, setMessage] = useState(\"\")\r\n  const [showMessage, setshowMessage] = useState(false)\r\n  const [mensaje, setMensaje] = useState(\"\")\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    setshowMessage(true)\r\n    const apiKey = 'AIzaSyD5XwIYEFhSD7qFGXJ93kJHrLYxSNmNKOQ'; // Replace with your actual API key\r\n    const apiUrl = 'https://generativelanguage.googleapis.com/v1beta2/models/text-bison-001:generateText';\r\n\r\n    const data = {\r\n      prompt: {\r\n        text: message\r\n      }\r\n    };\r\n\r\n    const requestOptions = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(data)\r\n    };\r\n\r\n    fetch(`${apiUrl}?key=${apiKey}`, requestOptions)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw new Error('Network response was not ok');\r\n        }\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        // Handle the response data here\r\n        setMensaje(data[\"candidates\"][0][\"output\"]);\r\n        let var1 = \"hola\";\r\n        let varTraducida = \"hello\";\r\n      })\r\n      .catch(error => {\r\n        // Handle errors here\r\n        console.error('There was a problem with the fetch operation:', error);\r\n      });\r\n\r\n\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-main\">\r\n        <form onSubmit = {handleSubmit}>\r\n          <input type=\"text\" value={message} onChange={(e) => setMessage(e.target.value)} />\r\n          <button>Boton</button>\r\n        </form>\r\n      </div>\r\n      {showMessage && <p>{mensaje}</p>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default API\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBL,cAAc,CAAC,IAAI,CAAC;IACpB,MAAMM,MAAM,GAAG,yCAAyC,CAAC,CAAC;IAC1D,MAAMC,MAAM,GAAG,sFAAsF;IAErG,MAAMC,IAAI,GAAG;MACXC,MAAM,EAAE;QACNC,IAAI,EAAEb;MACR;IACF,CAAC;IAED,MAAMc,cAAc,GAAG;MACrBC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;IAC3B,CAAC;IAEDS,KAAK,CAAE,GAAEV,MAAO,QAAOD,MAAO,EAAC,EAAEK,cAAc,CAAC,CAC7CO,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAACV,IAAI,IAAI;MACZ;MACAN,UAAU,CAACM,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;MAC3C,IAAIe,IAAI,GAAG,MAAM;MACjB,IAAIC,YAAY,GAAG,OAAO;IAC5B,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACvE,CAAC,CAAC;EAGN,CAAC;EAED,oBACElC,OAAA,CAAAE,SAAA;IAAAkC,QAAA,gBACEpC,OAAA;MAAKqC,SAAS,EAAC,gBAAgB;MAAAD,QAAA,eAC7BpC,OAAA;QAAMsC,QAAQ,EAAI3B,YAAa;QAAAyB,QAAA,gBAC7BpC,OAAA;UAAOuC,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEnC,OAAQ;UAACoC,QAAQ,EAAG7B,CAAC,IAAKN,UAAU,CAACM,CAAC,CAAC8B,MAAM,CAACF,KAAK;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAClF9C,OAAA;UAAAoC,QAAA,EAAQ;QAAK;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLvC,WAAW,iBAAIP,OAAA;MAAAoC,QAAA,EAAI3B;IAAO;MAAAkC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAChC,CAAC;AAEP;AAAC1C,EAAA,CAzDQD,GAAG;AAAA4C,EAAA,GAAH5C,GAAG;AA2DZ,eAAeA,GAAG;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}